# .github/workflows/check-license.yml

name: 'BUILD - Check Lisence Boilerplate'

on:
  pull_request:
    branches:
      - main
    # paths:
    #   - 'examples/**/variables.tf'
    #   - 'examples/**/outputs.tf'
  workflow_dispatch:

jobs:
  license:
    name: 'Files with no License'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TF_IN_AUTOMATION: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: list files
      #   run: |
      #     URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls/${{ github.event.pull_request.number }}/files"
      #     FILES=$(curl -s -X GET -G $URL | jq -r '.[] | .filename')
      #     echo $FILES

      # - id: files
      #   uses: jitterbit/get-changed-files@v1
      #   with:
      #     format: 'json'
      #   continue-on-error: true

      # - name: Get added and modified files
      #   run: |
      #     readarray -t added_modified_files <<<"$(jq -r '.[]' <<<'${{ steps.files.outputs.added_modified }}')"
      #     for added_modified_file in "${added_modified_files[@]}"; do
      #       echo "File Added/Modified : ${added_modified_file}" 
      #     done
      #     DIR="$(dirname ${added_modified_files[0]})"
      #     echo "ENV_DIR=${DIR}" >> $GITHUB_ENV
      #   continue-on-error: true

      # - name: Get removed files
      #   run: |
      #     readarray -t removed_files <<<"$(jq -r '.[]' <<<'${{ steps.files.outputs.removed }}')"
      #     for removed_file in ${removed_files[@]}; do
      #       echo "File Removed : ${removed_file}" 
      #     done
      #     DIR="$(dirname ${removed_files[0]})"
      #     echo "ENV_DIR=${DIR}" >> $GITHUB_ENV
      #   continue-on-error: true

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8 #install the python needed

      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: tools

      - name: execute py script # run the check_boilerplate.py
        run: |
          python check_boilerplate.py ${GITHUB_WORKSPACE}
        working-directory: tools