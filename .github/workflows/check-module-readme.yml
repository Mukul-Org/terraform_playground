# .github/workflows/check-module-readme.yml

name: 'BUILD - Auto update Module README.md'

on:
  # pull_request:
  #   types: [opened, reopened, closed]
  #   paths:
  #     - 'examples/**/variables.tf'
  #     - 'examples/**/README.md'
  push:
    branches:
      - main
    paths:
      - 'examples/**/variables.tf'
      - 'examples/**/README.md'
  workflow_dispatch:

jobs:
  variables:
    name: 'Add Variables/Outputs'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TF_IN_AUTOMATION: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - id: files
        uses: jitterbit/get-changed-files@v1
        with:
          format: 'json'
        continue-on-error: true

      - name: Get added and modified files
        run: |
          mapfile -d ',' -t added_modified_files < <(printf '%s,' '${{ steps.files.outputs.added_modified }}')
          for added_modified_file in "${added_modified_files[@]}"; do
            echo "File Added/Modified : ${added_modified_file}" 
          done
          DIR="$(dirname ${added_modified_files[0]})"
          echo "ENV_DIR=${DIR:2}" >> $GITHUB_ENV
        continue-on-error: true

      - name: Get removed files
        run: |
          readarray -t removed_files <<<"$(jq -r '.[]' <<<'${{ steps.files.outputs.removed }}')"
          for removed_file in ${removed_files[@]}; do
            echo "File Added/Modified : ${removed_file}" 
          done
          DIR="$(dirname ${removed_files[0]})"
          echo "ENV_DIR=${DIR:2}" >> $GITHUB_ENV
        continue-on-error: true

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8 #install the python needed

      - name: setup requirements.txt
        run: |
          pip install -r requirements.txt
        working-directory: tools

      - name: execute py script # run the tfdoc.py
        run: |
          python tfdoc.py ${GITHUB_WORKSPACE}/${{ env.ENV_DIR }}
        working-directory: tools

      - name: switching from HTTPS to SSH
        run: git remote set-url origin ${{ secrets.SSH_KEY }}

      - name: check for changes
        run: git status

      - name: stage changed files
        run: git add .

      - name: set config
        run: git config user.name "guptamukul-google"

      - name: commit changed files
        run: git commit -m "[WORKFLOW] Auto updating RAD-Lab Module README.md"

      - name: fetch from main
        run: git fetch origin main

      - name: push code to main
        run: git push origin HEAD:main